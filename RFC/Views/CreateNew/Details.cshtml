@model RFC.Models.CreateNew

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="right">
    <div class="header" style="display:flex; justify-content: space-between;">
        <h1 style="display:inline-block; width:auto; vertical-align: top;">Details</h1>
        <div class="buttons" style="margin-top: 0px; display:inline-block;width:auto;vertical-align: top;">
            <div class="otherButtons">
                <a style="width: 100%" class="button submit btn btn-default" asp-area="" asp-controller="CreateNew" asp-action="Index">Go Back</a>
            </div>
        </div>
    </div>
    <div class="rightContent">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Priority
                    </th>
                    <th>
                        Product
                    </th>
                    <th>
                        Customer Name
                    </th>
                    <th>
                        Requested Due Date
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Model.ID
                    </td>
                    <td>
                        @Model.Priority
                    </td>
                    <td>
                        @Model.Product
                    </td>
                    <td>
                        @Model.CustomersAffected
                    </td>
                    <td>
                        @Model.DueDate
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Questions:</h3>
        <table class="table" style="table-layout: fixed">
            <tbody>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.ReasonForChange)</button>
                        <div class="content">
                            <p class="p-wrapped">@Model.ReasonForChange</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.ChangeDescription)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.ChangeDescription</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.SystemAffected)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.SystemAffected</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.customers)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.customers</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.WhoPerforming)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.WhoPerforming</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.RiskOfChange)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.RiskOfChange</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.RiskNoChange)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.RiskNoChange</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.VerifyAfter)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.VerifyAfter</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.RollBackPlan)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.RollBackPlan</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.DueDate)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.DueDate</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.WhyDueDate)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.WhyDueDate</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" id="Question" class="collapsible">@Html.DisplayNameFor(model => model.ServiceImpact)</button>
                        <div class="content" style="width: 100%">
                            <p class="p-wrapped">@Model.ServiceImpact</p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="buttons" style="display: flex; justify-content: space-around">
            <a class="btn btn-default button btn-danger" asp-action="Delete" asp-route-id="@Model.ID">Delete</a>
            <a class="btn btn-default button @(Model.Approved ? "btn-warning" : "btn-success")" asp-action="Approve" asp-route-id="@Model.ID">@(Model.Approved ? "Unapprove" : "Approve")</a>
        </div>
    </div>
</div>


<style>

    .collapsible {
        background-color: #f3f3f3;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        font-weight: bold;
        border-color: #f3f3f3;
        outline: none;
    }

        .active, .collapsible:hover {
            background-color: #d2d2d2;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #d2d2d2;
    }

    .p-wrapped {
        word-break: break-all;
        white-space: normal
    }

    #Question:focus {
        outline: none;
    }
</style>


<script>var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }</script>