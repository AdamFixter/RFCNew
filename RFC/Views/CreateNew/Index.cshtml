
@model RFC.ViewModel.CreateNewViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">
    function GetDropdown(_name) {
        console.log(`Getting dropdown for: ${_name}`);
        var procemessage = "<option value='0'> Please wait...</option>";
        $("filterDropdown").html(procemessage).show();
        var url = "/createnew/getDropdownFor/";

        $.ajax({
            url: url,
            data: { name: _name },
            cache: false,
            type: "POST",
            success: function (data) {
                let markup = "<option value='0'>Select!!!</option>";
                Object.keys(data).forEach(item => {
                    item = data[item];
                    markup = markup + `<option value='${item.value}'>${item.text}</option>`;
                });
                $("#filterDropdown").html(markup).show();

            },
            error: function (response) {
                alert("error : " + JSON.stringify(response));
            }
        });

    }
</script>
<div id="right">
    <div class="header" style="display:flex; justify-content: space-between;">
        <h1 style="display:inline-block; width:auto; vertical-align: top;">Requests</h1>
        <div class="buttons" style="margin-top: 0px; display:inline-block;width:auto;vertical-align: top;">
            <div class="otherButtons">
                <a style="width: 100%" class="button submit btn btn-default" asp-area="" asp-controller="Home" asp-action="Index">Go Back</a>
            </div>
        </div>
    </div>
    <div class="rightContent">
        @using (Html.BeginForm())
        {
            @Html.DropDownListFor(m => m.PossibleFilters, new SelectList(Model.PossibleFilters, "Value", "Text"), new { @id = "possibleFilters", @style = "width:200px;", @onchange = "javascript:GetDropdown(this.value);" })
            <select id="filterDropdown" style="width: 200px"></select>
        }
        @*@using (Html.BeginForm("Create", "CreateNewController", FormMethod.Get))
        {
            <label>Select an item</label>
            @Html.DropDownListFor(i => i.ListItems, Model.ListItems, "Select");
            <input type="submit" value="Filter" />
        }*@
        @using (Html.BeginForm())
        {
            <p>
                Find in
                @Html.DropDownList("ColumnSelect", "Select a Column")
                by:
                @Html.TextBox("searchString")
                @Html.TextBox("DateTo")
                <ej-date-range-picker id="DateRange" date-format="dd/MM/yyyy" width="200px"></ej-date-range-picker>
                <input type="submit" value="Search" />
            </p>
        }
        <table class="table table-bordered table-condensed table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("ID" + (string.IsNullOrEmpty(ViewBag.sortOrder) ? " ▼" : "") + (ViewBag.sortOrder == "IDDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.IDSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("RFC Type" + (ViewBag.sortOrder == "RFCTypeAsc" ? " ▼" : "") + (ViewBag.sortOrder == "RFCTypeDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.RFCTypeSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Product Name" + (ViewBag.sortOrder == "ProductNameAsc" ? " ▼" : "") + (ViewBag.sortOrder == "ProductNameDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.ProductNameSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Customer Name" + (ViewBag.sortOrder == "CustomerNameAsc" ? " ▼" : "") + (ViewBag.sortOrder == "CustomerNameDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.CustomerNameSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Requested Due Date" + (ViewBag.sortOrder == "RequestedDueDateAsc" ? " ▼" : "") + (ViewBag.sortOrder == "RequestedDueDateDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.RequestedDueDateSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Approved" + (ViewBag.sortOrder == "ApprovedAsc" ? " ▼" : "") + (ViewBag.sortOrder == "ApprovedDesc" ? " ▲" : ""), "Index", new { sortOrder = ViewBag.Approved })
                    </th>
                </tr>
            </thead>
            @*<tbody>
                @foreach (var item in Model.Requests)
                {
                <tr class="d-table-row" id="table-row" data-href=@("/CreateNew/Details/" + item.ID)>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomersAffected)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DueDate)
                    </td>
                    <td>
                        @(item.Approved ? "✓" : "✕")
                    </td>
                </tr>
                }
            </tbody>*@
        </table>
        @*<div class="buttons">
            <div class="formButtons">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.Requests.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="button submit btn btn-default @(!Model.HasPreviousPage ? "disabled" : "")">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.Requests.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="button submit btn btn-default @(!Model.HasNextPage ? "disabled" : "")">
                    Next
                </a>
            </div>
        </div>*@
    </div>
</div>


<style>

    #table-row td:hover {
        cursor: pointer;
    }
</style>


<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var input = document.getElementById("searchString");
    var dateRangeTo = document.getElementById("DateTo");
    dateRangeTo.type = "date";
    dateRangeTo.format = "{0:yyyy-MM-dd}";

    dateRangeTo.style.display = "none";
    window.onload = testfunction;

    $('#ColumnSelect').on('change', function () {
        var index = $(this).find('option:selected').index();

        if (index == 5) {
            dateRangeTo.value = "";
            input.type = "date";
            input.format = "{0:yyyy-MM-dd}";
            dateRangeTo.style.display = "inline-block";
        } else {
            input.type = "text";
            input.format = null;
            dateRangeTo.innerHTML = "";
            dateRangeTo.style.display = "none";
        }
        input.value = "";
    })

    function testfunction() {

        var columnselect = document.getElementById("ColumnSelect");

        if (columnselect.options[columnselect.selectedIndex].text == "Requested Due Date") {
            input.type = "date";
            input.format = "{0:yyyy-MM-dd}";
            dateRangeTo.style.display = "inline-block";
        }
    }


</script>

<script type="text/javascript">
    $(document).ready(function ($) {
        $(".d-table-row").click(function () {
            window.document.location = $(this).data("href");
        });
    });
</script>

@*Credit to https://www.tutorialsplane.com/bootstrap-make-table-row-clickable/*@